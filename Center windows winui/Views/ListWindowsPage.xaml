<Page
    x:Class="CenterWindow.Views.ListWindowsPage"
    x:Name="RootPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:models="using:CenterWindow.Models"
    xmlns:conv="using:CenterWindow.Converters"
    xmlns:vm="using:CenterWindow.ViewModels"
    d:DataContext="{d:DesignInstance Type=vm:ListWindowsViewModel, IsDesignTimeCreatable=False}"
    mc:Ignorable="d"
    SizeChanged="Page_SizeChanged">

    <Page.Resources>
        <conv:NullToBoolConverter x:Key="NullToBool"/>

        <!-- Template with each UI row formatting -->
        <DataTemplate x:Key="WindowItemTemplate" x:DataType="models:WindowModel">
            <Grid Padding="4"
                Background="Transparent"
                Tapped="ItemGrid_Tapped"
                RightTapped="ItemGrid_RightTapped">
                <Grid.ContextFlyout>
                    <MenuFlyout Closing="OptionsMenuFlyout_Closing">
                        <ToggleMenuFlyoutItem
                            Text="{Binding DataContext.StrCenter, ElementName=RootPage}"
                            IsChecked="{Binding DataContext.IsCenterChecked, Mode=TwoWay, ElementName=RootPage}"
                            Click="ToggleMenuFlyoutItem_Click"/>
                        <ToggleMenuFlyoutItem
                            Text="{Binding DataContext.StrTransparency, ElementName=RootPage}"
                            IsChecked="{Binding DataContext.IsAlphaChecked, Mode=TwoWay, ElementName=RootPage}"
                            Click="ToggleMenuFlyoutItem_Click"/>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem
                            Text="{Binding DataContext.StrApplyToSelected, ElementName=RootPage}"
                            Command="{Binding DataContext.ApplyToSelectedWindowsCommand, ElementName=RootPage}"
                            CommandParameter="{Binding}"
                            IsEnabled="{Binding DataContext.IsListItemSelected, ElementName=RootPage}"/>
                        <MenuFlyoutItem
                            Text="{Binding DataContext.StrApplyToAll, ElementName=RootPage}"
                            Command="{Binding DataContext.ApplyToAllWindowsCommand, ElementName=RootPage}"
                            CommandParameter="{Binding}" />
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem
                            Text="{Binding DataContext.StrDeselect, ElementName=RootPage}"
                            Command="{Binding DataContext.DeselectWindowCommand, ElementName=RootPage}"
                            CommandParameter="{Binding}"
                            IsEnabled="{Binding DataContext.IsListItemSelected, ElementName=RootPage}"
                            Click="DeselectWindows_Click"/>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem
                            Text="{Binding DataContext.StrRefresh, ElementName=RootPage}"
                            Command="{Binding DataContext.RefreshWindowsCommand, ElementName=RootPage}"
                            CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Grid.ContextFlyout>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Title}"  Grid.Column="0" TextTrimming="CharacterEllipsis"/>
                <TextBlock Text="{Binding Handle}" Grid.Column="1" HorizontalAlignment="Center"/>
                <TextBlock Text="{Binding Rect}"   Grid.Column="2"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid x:Name="ContentArea" ColumnDefinitions="*" RowDefinitions ="*">
        <ScrollView x:Name="ScrollViewPage" ContentOrientation="Vertical"
                    HorizontalContentAlignment="Stretch"  VerticalContentAlignment="Stretch"
                    ZoomMode="Disabled" IsTabStop="True"
                    VerticalAlignment="Top" HorizontalAlignment="Left"
                    HorizontalScrollMode="Auto" HorizontalScrollBarVisibility="Auto"
                    VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">

            <StackPanel Orientation="Vertical" Style="{StaticResource BaseStackPanel}">

                <Grid ColumnDefinitions="*" RowDefinitions ="*, *">

                    <StackPanel
                        x:Name="WindowList"
                        Grid.Row="0"
                        Orientation="Vertical"
                        Margin="0, 12, 0, 0"
                        Spacing="4">

                        <Border CornerRadius="{x:Bind WindowList.CornerRadius}"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left"
                            BorderThickness="{x:Bind WindowList.BorderThickness}"
                            BorderBrush="MistyRose">
                            <Border.Background>
                                <SolidColorBrush Color="MistyRose"
                                             Opacity=".4" />
                            </Border.Background>
                            <CommandBar DefaultLabelPosition="Right"
                                        OverflowButtonVisibility="Collapsed"
                                        x:DefaultBindMode="OneWay">
                                <CommandBar.PrimaryCommands>
                                    <AppBarToggleButton x:Name="CmdBarCenter"
                                              ToolTipService.ToolTip="{Binding StrCenterToolTip}"
                                              Icon="Add"
                                              Label="{Binding StrCenter}"
                                              LabelPosition="Default"
                                              IsChecked="{Binding IsCenterChecked, Mode=TwoWay}"
                                              Foreground="MidnightBlue" />
                                    <AppBarToggleButton x:Name="CmdBarTransparency"
                                              ToolTipService.ToolTip="{Binding StrTransparencyToolTip}"
                                              Icon="Delete"
                                              Label="{Binding StrTransparency}"
                                              LabelPosition="Default"
                                              IsChecked="{Binding IsAlphaChecked, Mode=TwoWay}"
                                              Foreground="MidnightBlue" />
                                    <AppBarSeparator />
                                    <AppBarButton x:Name="CmdBarApplyToSelected"
                                              ToolTipService.ToolTip="{Binding StrApplyToSelectedToolTip}"
                                              Icon="Copy"
                                              Label="{Binding StrApplyToSelected}"
                                              LabelPosition="Default"
                                              IsEnabled="{Binding IsListItemSelected}"
                                              Command="{Binding ApplyToSelectedWindowsCommand}"
                                              Foreground="MidnightBlue">
                                    </AppBarButton>
                                    <AppBarButton x:Name="CmdBarApplyToAll"
                                              ToolTipService.ToolTip="{Binding StrApplyToAllToolTip}"
                                              Icon="Download"
                                              Label="{Binding StrApplyToAll}"
                                              LabelPosition="Default"
                                              Command="{Binding ApplyToAllWindowsCommand}"
                                              Foreground="MidnightBlue" />
                                    <AppBarSeparator />
                                    <AppBarButton x:Name="CmdBarDeselect"
                                            ToolTipService.ToolTip="{Binding StrDeselectToolTip}"
                                            Icon="Copy"
                                            Label="{Binding StrDeselect}"
                                            LabelPosition="Default"
                                            IsEnabled="{Binding IsListItemSelected}"
                                            Command="{Binding DeselectWindowCommand}"
                                            Click="DeselectWindows_Click"
                                            Foreground="MidnightBlue">
                                    </AppBarButton>
                                    <AppBarButton x:Name="CmdBarRefresh"
                                            ToolTipService.ToolTip="{Binding StrRefreshToolTip}"
                                            Icon="Copy"
                                            Label="{Binding StrRefresh}"
                                            LabelPosition="Default"
                                            Command="{Binding RefreshWindowsCommand}"
                                            Foreground="MidnightBlue">
                                    </AppBarButton>
                                </CommandBar.PrimaryCommands>
                            </CommandBar>
                        </Border>

                        <StackPanel
                            x:Name="PanelWindowList"
                            Style="{StaticResource ContentStackPanel}">
                        
                            <!-- Column headers -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Title"           Grid.Column="0" FontWeight="SemiBold"/>
                                <TextBlock Text="Handle"          Grid.Column="1" FontWeight="SemiBold"/>
                                <TextBlock Text="Position × Dim"  Grid.Column="2" FontWeight="SemiBold"/>
                            </Grid>
                            
                            <!-- Window list -->
                            <ListView
                            x:Name="WindowsListView"
                            ItemsSource="{Binding WindowsList}"
                            ItemTemplate="{StaticResource WindowItemTemplate}"
                            IsItemClickEnabled="False"
                            SelectionMode="Multiple"
                            Margin="0,12,0,0">
                                <interactivity:Interaction.Behaviors>
                                    <interactivity:EventTriggerBehavior EventName="SelectionChanged">
                                        <interactivity:InvokeCommandAction
                                        Command="{Binding WindowsSelectionChangedCommand}"
                                        CommandParameter="{x:Bind WindowsListView.SelectedItems, Mode=OneWay}" />
                                    </interactivity:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </ListView>
                        </StackPanel>
                        
                    </StackPanel>
                    
                    <!-- Transparency selection -->
                    <StackPanel
                        x:Name="WindowTransparency"
                        Grid.Row="1"
                        Margin="0,8,0,0"
                        Padding="8"
                        Style="{StaticResource ContentStackPanel}">
                        <StackPanel
                            x:Name="TransparencySlider"
                            Orientation="Horizontal"
                            Spacing="12">
                            <TextBlock
                                Text="Transparency:"
                                VerticalAlignment="Center"/>
                            <Slider
                                Minimum="0"
                                Maximum="255"
                                Value="{Binding Transparency, Mode=TwoWay}"
                                Width="200"/>
                            <TextBlock
                                Text="{Binding Transparency, Mode=OneWay}"
                                VerticalAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>
                    
                </Grid>
                
            </StackPanel>
            
        </ScrollView>
        
    </Grid>
    
</Page>

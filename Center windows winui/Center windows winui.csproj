<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net7.0-windows10.0.19041.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <RootNamespace>Center_windows_winui</RootNamespace>
    <ApplicationIcon>Assets/WindowIcon.ico</ApplicationIcon>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x86;x64;arm64</Platforms>
    <RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
    <PublishProfile>Properties\PublishProfiles\win10-$(Platform).pubxml</PublishProfile>
	<ImplicitUsings>enable</ImplicitUsings>
	<Nullable>enable</Nullable>
	<UseWinUI>true</UseWinUI>
    <EnableMsixTooling>true</EnableMsixTooling>

	  <WindowsPackageType>None</WindowsPackageType>
	  <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
	  
  </PropertyGroup>

  <ItemGroup>
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CommunityToolkit.Mvvm" Version="8.1.0" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="6.0.1" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.4.231008000" />
    <PackageReference Include="Microsoft.Xaml.Behaviors.WinUI.Managed" Version="2.0.9" />
    <PackageReference Include="WinUIEx" Version="2.3.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Center windows winui.Core\Center windows winui.Core.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Update="appsettings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
  
  <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
  </PropertyGroup>

	<Target Name="RemoveFoldersWithMuiFiles" AfterTargets="Build">

		<ItemGroup>
			<!-- Create a list of the languages your need to keep.-->
			<KeepingLanguages Include="en-US;es-ES" />

			<!-- Create a list of keeping files. -->
			<KeepingFiles Include="@(KeepingLanguages->'$(OutDir)%(Identity)\*.mui')"/>

			<!-- Create a list of removing files. -->
			<RemovingFiles Include="$(OutDir)*\*.mui" Exclude="@(KeepingFiles)" />

			<!-- Create a list of removing folders. -->
			<RemovingFolders Include="@(RemovingFiles->'%(RootDir)%(Directory)')" />
		</ItemGroup>

		<!-- Uncomment these messages if you need to check each list.
    <Message Text="Keeping languages: @(KeepingLanguages)" Importance="High" />
    <Message Text="Keeping files:     @(KeepingFiles)" Importance="High" />
    <Message Text="Removing files:    @(RemovingFiles)" Importance="High" />
    -->

		<!-- Execute RemoveDir command and remove all folders in "RemovingFolders".-->
		<RemoveDir Directories="@(RemovingFolders)" />

	</Target>
	
</Project>
